function numerical_ord_q1()
n=100; % sample
k = 1/n; %step length
x = [0:k:1-k];f=@(y)(-2*y+1)
y1=zeros(n,1);y1(1)= 1;
y2=zeros(n,1);y2(1)= 1;
y3=zeros(n,1);y3(1)= 1;
y4=zeros(n,1);y4(1)= 1;
y5=zeros(n,1);y5(1)= 1;
y7=zeros(n,1);y7(1)= 1;
y6=zeros(n,1);y6(1)= 1;
for i = 2:n
   y1(i)  = y1(i-1) + k*(-2*y1(i-1)+1);   %% Eular forward method
   y2(i)  = (y2(i-1) + k)/(1+2*k);        %% Eular Backward
   y3(i)  = ((1-k)*y3(i-1)+k)/(1+k);      %% Trapezoidal Method
   y4(i)  = (1+2*k^2-2*k)*y4(i-1) + k*(1-k); %% Midpoint
   %y6(i)  = y6(i-1) + (k/6)*((-4*k^3-2*k^2+4*k-8)*y6(i-1)+k^2+k+4);
   k1 = f(y5(i-1));k2 = f(y5(i-1) + k1*k/2);k3 = f(y5(i-1) + k2*k/2);k4 = f(y5(i-1) + k3*k);
   y5(i) = y5(i-1) + (k/6)*(k1 + 2*k2 + 2*k3 + k4);
   y7(i)= y7(i-1)*(4*k^3-8*k^2+12*k-12) + 4-2*k;
end
 y1',y2',y3',y4',y5'
y6=0.5*(1+exp(-2.*x));
q1=zeros(n,1);q2=zeros(n,1);q3=zeros(n,1);q4=zeros(n,1);q5=zeros(n,1);
for i = 2:n-1
    q1(i) = log(abs(y6(i+1)-y1(i+1)))/log(k) ; 
    q2(i) = log(abs(y6(i+1)-y2(i+1)))/log(k) ; 
    q3(i) = log(abs(y6(i+1)-y3(i+1)))/log(k) ; 
    q4(i) = log(abs(y6(i+1)-y4(i+1)))/log(k) ; 
    q5(i) = log(abs(y6(i+1)-y5(i+1)))/log(k) ; 
end
[q1,q2,q3,q4,q5];
[y5-y7]'
plot(x(2:end-1),q1(2:end-1),'*r'); hold on
plot(x(2:end-1),q2(2:end-1),'-g'); hold on
% figure(2)
plot(x(2:end-1),q3(2:end-1),'^b'); hold on
plot(x(2:end-1),q4(2:end-1),'oy'); hold on
plot(x(2:end-1),q5(2:end-1),'-y'); hold on
legend('Eular forward','Eular Backward','Trapezoidal','Mid point','4th runge kutta');



% %% error analyse and plot 
% [sum(abs(y6-y1')),sum(abs(y6-y2')),sum(abs(y6-y3')),sum(abs(y6-y4'))];
% plot(x,log(abs(y6-y1')),'*r'); hold on
% plot(x,log(abs(y6-y2')),'-g'); hold on
% % figure(2)
% plot(x,log(abs(y6-y3')),'^b'); hold on
% plot(x,log(abs(y6-y5')),'oy'); hold on
